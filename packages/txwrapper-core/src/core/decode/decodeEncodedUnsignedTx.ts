import { hexToU8a } from '@polkadot/util';

import { OptionsWithMeta } from '../../types';

export interface DecodedEncodedUnsignedTx {
	method: IMethod;
	version: number;
}

/**
 * Primitive version of `DecodeMethodInput` interface from polkadot-js.
 */
interface IMethod {
	args: unknown;
	callIndex: string;
}

/**
 * This should be used in conjunction with `encodeUnsignedTx` as the expected
 * payload will match the `Extrinsic` type we are generating via polkadot-js.
 *
 * @param encodedUnsignedTx Generated by `encodeUnsignedTx`
 * @param options Runtime-specific data used for decoding the transaction.
 * @returns
 */
export function decodeEncodedUnsignedTx(
	encodedUnsignedTx: string,
	options: OptionsWithMeta
): DecodedEncodedUnsignedTx {
	const decodedTx = options.registry.createType(
		'Extrinsic',
		hexToU8a(encodedUnsignedTx)
	);

	return {
		method: decodedTx.method.toJSON() as IMethod,
		version: decodedTx.version,
	};
}
